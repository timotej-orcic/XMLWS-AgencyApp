@model XML_WS_AgencyApp.Models.AddNewBookingUnitViewModel
@{
    ViewBag.Title = "Add new booking unit";
}

<h2 style="color:#757575">Add new booking unit:</h2>

@if (TempData["error"] != null)
{
    <div id="errorId" class="row">
        <h3 style="color:#D32F2F">@TempData["error"]</h3>
    </div>
}

@using (Html.BeginForm("AddBookingUnit", "Agent", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <hr />
    <form class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Name</label>
                    <div class="col-xs-9">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Country</label>
                    <div class="col-xs-9">
                        @Html.DropDownListFor(m => Model.CountryId, new SelectList(Model.CountriesList, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Country" })
                        @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">City</label>
                    <div class="col-xs-9">
                        @Html.DropDownListFor(m => Model.CityId, new SelectList(Model.CitiesList, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "City" })
                        @Html.ValidationMessageFor(m => m.CityId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Address</label>
                    <div class="col-xs-9">
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Description</label>
                    <div class="col-xs-9">
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Guest capacity</label>
                    <div class="col-xs-9">
                        @Html.TextBoxFor(m => m.PeopleNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.PeopleNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Accomodation type</label>
                    <div class="col-xs-9">
                        @Html.DropDownListFor(m => Model.AccomodationTypeId, new SelectList(Model.AccomodationTypesList, "Value", "Text"), htmlAttributes: new { @class = "form-control"})
                        @Html.ValidationMessageFor(m => m.AccomodationTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Accomodation category</label>
                    <div class="col-xs-9">
                        @Html.DropDownListFor(m => Model.AccomodationCategoryId, new SelectList(Model.AccomodationCategoriesList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AccomodationCategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <label class="control-label col-xs-3" style="color:#444444">Images</label>
                    <div class="col-xs-9">
                        @Html.TextBoxFor(m => m.Images, new { @type = "file", @multiple = "multiple", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Images, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col-sm-5">
                <div class="form-group">
                    <h3 class="control-label col-xs-5" style="color:#757575">Bonus features:</h3>
                    <div class="col-xs-7"></div>
                </div>
            </div>
        </div>
        @for (int i = 0; i < Model.BonusFeatures.Count; i++)
        {
            <div class="row">
                <div class="col-sm-5">
                    <div class="form-group">
                        <label class="col-xs-6" style="color:#444444; text-align:right">@Model.BonusFeatures[i].Name</label>
                        <div class="col-xs-6">
                            @Html.CheckBoxFor(m => m.BonusFeatures[i].IsSelected)
                            @Html.HiddenFor(m => m.BonusFeatures[i].Id)
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-sm-5">
                <div class="col-xs-9"></div>
                <div class="col-xs-3">
                    <button type="submit" class="btn btn-default">Add</button>
                </div>
            </div>
        </div>
    </form>
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $('#Country').change(function () {
            var selectedCountry = $("#Country").val();
            var citiesSelect = $('#City');
            citiesSelect.empty();
            if (selectedCountry != null && selectedCountry != '') {
                $.getJSON('@Url.Action("GetCitiesByCountryId")', { countryId: selectedCountry }, function (cities) {
                    if (cities != null && !jQuery.isEmptyObject(cities))
                    {
                        citiesSelect.append($('<option/>', {
                            value: null,
                            text: ""
                        }));
                        $.each(cities, function (index, city) {
                            citiesSelect.append($('<option/>', {
                                value: city.Value,
                                text: city.Text
                            }));
                        });
                    };
                });
            }
        });

        $(function () {
            setTimeout(function () {
                $("#errorId").hide('blind', {}, 500)
            }, 3000);
        });
    </script>
}